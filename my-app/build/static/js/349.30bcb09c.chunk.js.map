{"version":3,"file":"static/js/349.30bcb09c.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(err, errorInfo) {\r\n    console.log(err, errorInfo);\r\n    this.setState({\r\n        error: true\r\n    })\r\n  }\r\n\r\n  render () {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}\r\n     src={img} \r\n     alt={'Error'}/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComicses} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComicses(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map(item => {\n            return (\n                <li className=\"comics__item\" key={item.id}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}$</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const respons = await fetch(url, { method, body, headers });\r\n\r\n      if (!respons.ok) {\r\n        throw new Error(`Could not fetch ${url}, status ${respons.status}`)\r\n      }\r\n\r\n      const data = await respons.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => { setError(null) }, [])\r\n\r\n  return { loading, request, error, clearError }\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, request, error, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=3490c7c250fcd530402c1a42a9667fdb';\r\n  const _baseOffset = 250;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getAllComicses = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?&${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n\r\n  const _transformCharacter = (char) => {\r\n    return{\r\n        id: char.id,\r\n        name: char.name,\r\n        description: char.description,\r\n        thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n        homepage: char.urls[0].url,\r\n        wiki: char.urls[1].url,\r\n        comics: char.comics.items,\r\n    }\r\n  } \r\n\r\n  const _transformComics = (comicses) => {\r\n    return{\r\n      id: comicses.id,\r\n      title: comicses.title,\r\n      description: comicses.description || 'There is no description',\r\n      pageCount: comicses.pageCount ? `${comicses.pageCount} p.`: 'No information about the number of pages',\r\n      thumbnail: comicses.thumbnail.path + '.' + comicses.thumbnail.extension,\r\n      resourceURI: comicses.resourceURI,\r\n      language: comicses.textObjects.language || 'en-us',\r\n      price: comicses.prices[0].price,\r\n    }\r\n  }\r\n  return {loading, error, getAllCharacters, getCharacter, clearError, getAllComicses, getComic}\r\n}\r\n\r\nexport default useMarvelService;"],"names":["ErrorBoundary","Component","constructor","arguments","state","error","componentDidCatch","err","errorInfo","console","log","this","setState","render","_jsx","ErrorMessage","props","children","style","display","width","height","objectFit","margin","src","img","alt","ComicsList","comicsList","setComicsList","useState","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","getAllComicses","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","className","_jsxs","Link","to","concat","id","thumbnail","title","price","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","ComicsPage","_Fragment","request","clearError","useHttp","setLoading","setError","useCallback","async","url","method","undefined","body","headers","respons","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","name","description","path","extension","homepage","urls","wiki","comics","_transformComics","comicses","pageCount","resourceURI","language","textObjects","prices","getAllCharacters","results","getCharacter","res","getComic"],"sourceRoot":""}